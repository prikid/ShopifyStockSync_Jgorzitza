version: '3.9'

x-backend: &backend
  restart: unless-stopped
  build:
    context: .
    dockerfile: ./Dockerfile
  env_file:
    - .env
  environment:
    DB_NAME: shopify_sync_db
    DB_HOST: db
    DB_PORT: 5432
    REDIS_URL: redis://redis:6379/1
  depends_on:
    - db
    - redis
  volumes:
    - .:/app

services:
  frontend:
    build:
      context: ./frontend/
      dockerfile: ./Dockerfile
    env_file:
      - .env
    ports:
      - '${HOST_WEB_PORT:-80}:8080'
    volumes:
      - ./frontend:/app

  backend:
    <<: *backend
    expose:
      - 8000
    ports:
      - '8000:8000'
    command: ./wait-for-it.sh db:5433 -- run.sh


  celery:
    <<: *backend
    command: ./wait-for-it.sh db:5433 -- celery -A app worker --loglevel=info

  #  celery-beat:
  #    build: .
  #    command: celery -A storefront beat --loglevel=info
  #    depends_on:
  #      - redis
  #    volumes:
  #      - .:/app
  #  flower:
  #    build: .
  #    command: celery -A storefront flower
  #    depends_on:
  #      - web
  #      - redis
  #      - celery
  #    environment:
  #      - DEBUG=1
  #      - CELERY_BROKER=redis://redis:6379/0
  #      - CELERY_BACKEND=redis://redis:6379/0
  #    ports:
  #      - 5555:5555

  db:
    image: postgres:15-alpine3.18
    restart: unless-stopped
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0-alpine
    ports:
      - 6379:6379
    restart: unless-stopped
    volumes:
      - redisdata:/data


volumes:
  postgres_data:
  redisdata: