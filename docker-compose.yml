version: '3.9'

x-backend: &backend
  #  restart: unless-stopped
  build:
    context: .
    dockerfile: ./Dockerfile
  env_file:
    - .env
  environment:
    DB_NAME: shopify_sync_db
    DB_HOST: db
    DB_PORT: 5432
    REDIS_URL: redis://redis:6379/1
  depends_on:
    - db
    - redis
  volumes:
    - static_volume:/app/static
    - media_volume:/app/media
    - data_volume:/app/data

services:
  frontend:
    container_name: vue_frontend
    expose:
      - 8080
    build:
      context: ./frontend/
      dockerfile: ./Dockerfile
    env_file:
      - .env
    environment:
      VUE_APP_BACKEND_HOST: http://localhost
  #    restart: unless-stopped


  backend:
    container_name: django_backend
    <<: *backend
    expose:
      - 8000
    command: ./wait-for-it.sh db:5432 -- ./run.sh

  celery:
    <<: *backend
    command: ./wait-for-it.sh db:5432 -- python -m celery -A app worker -l info

  celery-beat:
    <<: *backend
    command: ./wait-for-it.sh db:5432 -- python -m celery -A app beat -l info -S django


  #  flower:
  #    build: .
  #    command: celery -A storefront flower
  #    depends_on:
  #      - web
  #      - redis
  #      - celery
  #    environment:
  #      - DEBUG=1
  #      - CELERY_BROKER=redis://redis:6379/0
  #      - CELERY_BACKEND=redis://redis:6379/0
  #    ports:
  #      - 5555:5555

  nginx:
    container_name: nginx_proxy
    build: ./nginx
    #    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - static_volume:/staticfiles
      - media_volume:/mediafiles
    depends_on:
      - frontend
      - backend

  db:
    image: postgres:15-alpine3.18
    #    restart: unless-stopped
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0-alpine
    ports:
      - 6379:6379
    #    restart: unless-stopped
    volumes:
      - redisdata:/data


volumes:
  postgres_data:
  redisdata:
  static_volume:
  media_volume:
  data_volume: